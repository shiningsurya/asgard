#!/usr/bin/env python
RE_PATTERN = "(?P<ymd>\d{8})_(?P<hms>\d{6})_muos_ea99_dm(?P<dm>\d*\.\d*)_sn(?P<sn>\d*\.\d*)_wd(?P<wd>\d*\.\d*)\w"
import re
rec = re.compile (RE_PATTERN)
import os
import numpy as np


def ParseArgs():
    import argparse
    '''For argument parsing'''
    ap = argparse.ArgumentParser(prog='agname', description='Asgard tool for name parsing/sorting.', epilog='Part of Asgard')
    add = ap.add_argument
    add('dumps', help = 'dump list', type=str)
    # sn
    add('--sn', help = 'S/N minimum. default min s/n.', default=0, dest='sn', type=float)
    add('--SN', help = 'S/N maximum.', default=100000.0, dest='SN', type=float)
    add('--dm', help = 'DM minimum. default min DM', default=0, dest='dm', type=float)
    add('--DM', help = 'DM maximum.', default=1200.0, dest='DM', type=float)
    add('--wd', help = 'Width(ms) minimum. default min width', default=0, dest='wd', type=float)
    add('--WD', help = 'Width(ms) maximum.', default=1000.0, dest='WD', type=float)
    # o
    add('-o', help = 'List the matched in a file', dest = 'list', default=None)
    add('-v', help='Verbosity switch.', action='store_true')
    return ap.parse_args()

if __name__ == "__main__":
    args = ParseArgs ()
    print ("")
    if args.v:
        print (args)
    with open(args.dumps, "r") as f:
        ENTRY = f.readlines ()
        f.seek (0)
        DUMPS = rec.findall (f.read())
    #
    n = len(DUMPS)
    if args.v:
        print ("Asgard::Namelyzer found {0} dumps.".format(n))
    SN  = np.zeros (n, dtype=np.float32)
    DM  = np.zeros (n, dtype=np.float32)
    WD  = np.zeros (n, dtype=np.float32)
    for ii, ll in enumerate (DUMPS):
        DM[ii] = float( ll[2] )
        SN[ii] = float( ll[3] )
        WD[ii] = float( ll[4] )
    #
    IDX = np.logical_and (
            np.logical_and ( SN >= args.sn, SN <= args.SN ),
            np.logical_and ( DM >= args.dm, DM <= args.DM )
    )
    IDX = np.logical_and (
            IDX,
            np.logical_and ( WD >= args.wd, WD <= args.WD )
    )
    if args.v:
        print ("Asgard::Namelyzer filtered {0} dumps.".format(IDX.sum()))
    #
    SD  = []
    for i,e in enumerate (ENTRY):
        if IDX[i]:
            SD.append (e)
    aSN = np.argsort (SN[IDX])
    aDM = np.argsort (DM[IDX])
    aWD = np.argsort (WD[IDX])
    AAA = np.vstack (( aSN, aWD, aDM ))
    LSR = np.lexsort (AAA)
    #
    if args.list:
        with open (args.list, "w") as f:
            for lsr in LSR:
                f.write (SD[lsr])
    else:
        for lsr in LSR:
            print (SD[lsr].strip())

